name: Build and populate cache

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"
  push:
    paths:
      - "flake/pkgs"
      - "**.lock"
      - "_sources/*"
      - ".github/workflows/build.yml"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get_packages.outputs.packages }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Lix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          source_url: https://install.lix.systems/lix/lix-installer-x86_64-linux
          logger: pretty

      - name: Get packages
        id: get_packages
        run: |
          #!/usr/bin/env bash
          export parsed=$(nix flake show --json | jq -c ".packages.\"x86_64-linux\" | keys")
          echo "$parsed"
          echo "packages=$parsed" >> $GITHUB_OUTPUT

  build:
    if: github.repository == 'isabelroses/beapkgs'
    runs-on: ubuntu-latest
    needs: [ setup ]
    strategy:
      matrix:
        package: ${{fromJSON(needs.setup.outputs.packages)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Lix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          source_url: https://install.lix.systems/lix/lix-installer-x86_64-linux
          logger: pretty

      - name: Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setup cachix
        uses: cachix/cachix-action@v15
        with:
          name: isabelroses
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_TOKEN }}"

      - name: Build from the matrix
        run: nix build -L .#${{ matrix.package }}
